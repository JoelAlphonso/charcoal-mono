<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>elFinder</title>
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2"/>

        {{# elfinderAssets }}
        <link rel="stylesheet" type="text/css" media="screen"
              href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">

        <link rel="stylesheet" type="text/css" media="screen" href="{{ elfinder_url }}css/elfinder.min.css">
        <link rel="stylesheet" type="text/css" media="screen" href="{{ elfinder_url }}css/theme.css">

        {{!-- Optional moono theme. Must be installed separately --}}
        {{!-- https://github.com/lokothodida/elfinder-theme-moono --}}
        <link rel="stylesheet" type="text/css" media="screen" href="{{ elfinder_url }}themes/moono/css/theme.css">

        <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
        <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>

        <script src="{{ elfinder_url }}js/elfinder.min.js"></script>

        {{!-- elFinder translation (OPTIONAL) --}}
        {{!--<script src="js/i18n/elfinder.fr.js"></script>--}}
        {{/ elfinderAssets }}

        <style type="text/css">
            body {
                margin: 0;
            }

            .elfinder {
                border: none;
                box-shadow: none;
            }
        </style>

        <script>
            // Documentation for client options:
            // https://github.com/Studio-42/elFinder/wiki/Client-configuration-options
            $(document).ready(function () {
                var elf, defaults, actionUri, settings = {};

                actionUri = '{{ admin_url }}elfinder-connector' +
                            '?obj_type={{ objType }}' +
                            '&obj_id={{ objId }}' +
                            '&property={{ propertyIdent }}';

                defaults = {
                    url: actionUri,
                    getFileCallback: function (file) {
                        if (elf.option('separator') === '\\') {
                            var separator = /\\/g;
                            if ($.isArray(file)) {
                                file = $.map(file, function (f) {
                                    return f.path.replace(separator, '/');
                                });
                            } else {
                                file.path = file.path.replace(separator, '/');
                            }
                        }

                        if (typeof(parent.elFinderCallback['{{elfinderCallback}}']) === 'function') {
                            parent.elFinderCallback['{{elFinderCallback}}'](file, elf);
                        }
                    }
                };

                $.extend(
                    settings,
                    defaults,
                    {{& elfinderPropertyConfig }}
                );

                var elfInit = function (settings) {
                    $().ready(function() {
                        elf = $('#elfinder')
                            .elfinder(settings)
                            .elfinder('instance');
                    });
                };

                if (settings.lang != 'en') {
                    $.ajax({
                        url : '{{elfinder_url}}js/i18n/elfinder.'+settings.lang+'.js',
                        cache : true,
                        dataType : 'script'
                    })
                    .done(function() {
                        elfInit(settings);
                    })
                    .fail(function() {
                        settings.lang = 'en';
                        elfInit(settings);
                    });
                } else {
                    elfInit(settings);
                }
            });
        </script>
    </head>

    <body>
        <div id="elfinder"></div>
    </body>
</html>
